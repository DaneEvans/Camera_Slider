name: Continuous Integration

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-firmware:
    runs-on: ubuntu-latest
    name: Build Firmware
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio
        
    - name: Cache PlatformIO packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.platformio
        key: ${{ runner.os }}-pio-${{ hashFiles('**/platformio.ini') }}
        restore-keys: |
          ${{ runner.os }}-pio-
          
    - name: Build firmware
      run: |
        pio run --environment seeed_xiao_nrf52840
        
    - name: Build check
      run: |
        pio check --environment seeed_xiao_nrf52840
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      if: success()
      with:
        name: firmware-build
        path: .pio/build/seeed_xiao_nrf52840/

  generate-docs:
    runs-on: ubuntu-latest
    name: Generate Documentation
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Doxygen
      run: |
        sudo apt-get update
        sudo apt-get install -y doxygen graphviz
        
    - name: Generate documentation
      run: |
        doxygen Doxyfile
        
    - name: Check documentation size
      run: |
        echo "Documentation generated successfully"
        du -sh docs/html/
        echo "Files generated:"
        find docs/html/ -type f | wc -l
        
    - name: Upload documentation artifacts
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs/html

  deploy-docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: generate-docs
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    name: Deploy Documentation
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  test-docs:
    runs-on: ubuntu-latest
    needs: generate-docs
    name: Test Documentation
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download documentation artifacts
      uses: actions/download-artifact@v3
      with:
        name: pages
        path: docs/html
        
    - name: Check documentation structure
      run: |
        echo "Checking documentation structure..."
        ls -la docs/html/
        
        # Check if main index file exists
        if [ -f "docs/html/index.html" ]; then
          echo "✓ index.html found"
        else
          echo "✗ index.html not found"
          exit 1
        fi
        
        # Check if source files are documented
        if [ -d "docs/html/files.html" ]; then
          echo "✓ Source files documented"
        else
          echo "✗ Source files not documented"
          exit 1
        fi
        
        echo "Documentation validation passed!"
